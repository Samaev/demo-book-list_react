{"version":3,"sources":["components/add-a-book/Categories.js","components/add-a-book/BookForm.js","components/dashboard/Dashboard.js","App.js","index.js"],"names":["genres","unshift","genresList","map","el","genreLists","BookForm","match","useState","title","setTitle","aName","setaName","cat","setCat","ISBN","setISBN","edit","setEdit","handleEdit","a","axios","get","params","id","then","res","data","book_name","author_name","category","catch","err","alert","useEffect","patch","length","ind","console","log","post","window","location","replace","validated","setValidated","Col","xl","sm","md","to","Button","variant","size","block","Container","Form","noValidate","onSubmit","event","form","currentTarget","preventDefault","checkValidity","stopPropagation","handleSubmitButton","Group","as","Row","controlId","Label","column","Control","required","type","value","onChange","e","target","placeholder","Feedback","htmlSize","custom","InputGroup","hasValidation","Prepend","Text","pattern","maxLength","minLength","span","offset","Dashboard","props","setData","refresh","setRefresh","handleDelete","confirm","delete","listBooks","book","ButtonGroup","pathname","onClick","Jumbotron","document","Table","striped","bordered","hover","App","exact","path","component","withRouter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b730cc0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst genres = [\"Action\", \"Adventure\", \"Comedy\", \"Drama\", \"Fantasy\"];\ngenres.unshift('');\nconst genresList = genres.map((el) => <option key={el}>{el}</option>);\n\nexport default function genreLists() {\n  return genresList;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  Form,\n  Row,\n  Col,\n  Button,\n  InputGroup,\n  Container,\n} from \"react-bootstrap\";\nimport {\n  Link,\n} from \"react-router-dom\";\nimport Categories from \"./Categories\";\n\n\nexport default function BookForm({ match }) {\n  const [title, setTitle] = useState(\"\");\n  const [aName, setaName] = useState(\"\");\n  const [cat, setCat] = useState(\"Drama\");\n  const [ISBN, setISBN] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const handleEdit = async () => {\n    setEdit(true);\n    let el = await axios\n      .get(`http://localhost:3010/books/${match.params.id}`)\n      .then((res) => {\n        setTitle(res.data.book_name);\n        setaName(res.data.author_name);\n        setCat(res.data.category);\n        setISBN(res.data.ISBN);\n      })\n      .catch((err) => alert(err));\n  };\n  useEffect(() => {\n    if (match.params.id) {\n      handleEdit();\n    }\n  }, []);\n\n  const resetF = () => {\n    setTitle(\"\");\n    setaName(\"\");\n    setCat(\"\");\n    setISBN(\"\");\n  };\n\n  function handleCat(e) {\n    setCat(e.target.value);\n  }\n\n  async function handleSubmitButton() {\n    if (edit) {\n      axios\n        .patch(`http://localhost:3010/books/${match.params.id}`, {\n          id: match.params.id,\n          book_name: title,\n          author_name: aName,\n          category: cat,\n          ISBN: ISBN,\n        })\n        .then(() => alert(\"Successfull update\"))\n        .catch((err) => alert(err));\n    } else {\n      let ind = await axios\n        .get(`http://localhost:3010/books`)\n        .then((res) => {\n          return res.data[res.data.length - 1].id;\n        })\n        .catch((err) => alert(err));\n      ind += 1;\n      console.log(ind);\n      axios\n        .post(`http://localhost:3010/books`, {\n          id: ind,\n          book_name: title,\n          author_name: aName,\n          category: cat,\n          ISBN: ISBN,\n        })\n        .then((res) => alert(`Book successfully added with index: ${ind}`))\n        .catch((err) => alert(\"something went wrong: \" + err));\n\n      window.location.replace(\"/\")\n    }\n  }\n\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    } else {\n      handleSubmitButton();\n      resetF();\n      setValidated(true);\n    }\n    setValidated(true);\n    //\n  };\n  return (\n    <>\n      <Col xl={2} sm={2} md={2}>\n        <Link to=\"/\">\n          <Button variant=\"outline-primary\" size=\"sm\" block>\n            &lt; Dashboard\n          </Button>\n        </Link>\n      </Col>\n      <Container>\n        <h1>{edit ? \"Edit book\" : \"Add new book\"}</h1>\n\n        <Col xl={12}>\n          <br />\n          <br />\n          <Col xl={9}>\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n              <Form.Group as={Row} controlId=\"title\">\n                <Form.Label column sm={2}>\n                  Book title\n                </Form.Label>\n                <Col sm={10}>\n                  <Form.Control\n                    required\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => {\n                      setTitle(e.target.value);\n                    }}\n                    placeholder=\"Enter here book title\"\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter book title.\n                  </Form.Control.Feedback>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"aName\">\n                <Form.Label column sm={2}>\n                  Author name\n                </Form.Label>\n                <Col sm={10}>\n                  <Form.Control\n                    required\n                    type=\"text\"\n                    value={aName}\n                    onChange={(e) => setaName(e.target.value)}\n                    placeholder=\"Enter here author name\"\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter author name.\n                  </Form.Control.Feedback>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row}>\n                <Form.Label column sm={2}>\n                  Category\n                </Form.Label>\n                <Col sm={10}>\n                  <Form.Control\n                    htmlSize={3}\n                    custom\n                    required\n                    as=\"select\"\n                    onChange={handleCat}\n                  >\n                    <Categories />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please choose genre.\n                    </Form.Control.Feedback>\n                  </Form.Control>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"ISBN\">\n                <Form.Label column sm={2}>\n                  International Standard Book Number\n                </Form.Label>\n                <Col sm={10}>\n                  <InputGroup hasValidation>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text id=\"basic-addon3\">ISBN</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"text\"\n                      pattern=\"\\d*\"\n                      maxLength=\"13\"\n                      minLength=\"13\"\n                      value={ISBN}\n                      required\n                      onChange={(e) => setISBN(e.target.value)}\n                      placeholder=\"Enter here international Standard Book Number\"\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please enter ISBN (13 digits).\n                    </Form.Control.Feedback>\n                  </InputGroup>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row}>\n                <Col sm={{ span: 10, offset: 2 }}>\n                  {/* <Alert\n                      variant=\"danger\"\n                      style={{\n                        display:\n                          aName.length > 0 &&\n                          title.length > 0 &&\n                          ISBN.length === 13\n                            ? \"none\"\n                            : \"\",\n                      }}\n                    >\n                      <Alert.Heading>\n                        Red bordered inputs cannot be empty!\n                      </Alert.Heading>\n                      <p style={{ display: title.length > 0 ? \"none\" : \"\" }}>\n                        Please enter Book title\n                      </p>\n                      <p style={{ display: aName.length > 0 ? \"none\" : \"\" }}>\n                        Please enter Author name\n                      </p>\n                      <p style={{ display: ISBN.length === 13 ? \"none\" : \"\" }}>\n                        Please enter correct ISBN number (13 digits){\" \"}\n                        {13 - ISBN.length} left\n                      </p>\n                    </Alert> */}\n                  <Button\n                    type=\"submit\"\n                    size=\"lg\"\n                    block\n                    // onClick={handleClick}\n                    // disabled={\n                    //     aName.length < 1 ||\n                    //     title.length < 1 ||\n                    //     ISBN.length !== 13\n                    //   }\n                  >\n                    {edit ? `Save as #${match.params.id}` : \"Add a Book\"}\n                  </Button>\n                </Col>\n              </Form.Group>\n            </Form>\n          </Col>\n        </Col>\n      </Container>\n    </>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Table,\n  ButtonGroup,\n  Jumbotron,\n  Col,\n  Container,\n} from \"react-bootstrap\";\nimport {\n  BrowserRouter as Router,\n  Link\n} from \"react-router-dom\";\n\nexport default function Dashboard(props) {\n  const [data, setData] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3010/books`)\n      .then((res) => {\n        setData(res.data);\n        console.log(\"Data loaded successfully\");\n      })\n      .catch((err) => alert(err));\n  }, [refresh]);\n\n  const handleDelete = (event) => {\n    console.log(event);\n    let id = event.target.id;\n    let confirmDel = window.confirm(\n      `You realy want to delete book with index ${id}?`\n    );\n    if (confirmDel) {\n      axios\n        .delete(`http://localhost:3010/books/${id}`)\n        .then((res) => alert(\"Book deleted successfully\"))\n        .catch((err) => alert(`Error: \\t ${err}`));\n    }\n    setRefresh(!refresh);\n  };\n\n  let listBooks = data.map((book) => (\n    <tr key={book.id}>\n      <td>{book.id}</td>\n      <td>{book.book_name}</td>\n      <td>{book.author_name}</td>\n      <td>{book.category}</td>\n      <td>{book.ISBN}</td>\n      <td>\n        <ButtonGroup>\n          <Link\n            to={{\n              pathname: `/book/${book.id}`,\n            }}\n          >\n            <Button variant=\"warning\">Edit</Button>\n          </Link>\n          <Button\n            variant=\"outline-danger\"\n            size=\"sm\"\n            id={book.id}\n            onClick={handleDelete}\n          >\n            Delete\n          </Button>\n        </ButtonGroup>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <div>\n      <Jumbotron>\n        <Col xl={5}>\n          <h1>{document.title}</h1>\n          <p>Here you can add books to your list, remove, or edit them</p>\n        </Col>\n        <Col xl={3}>\n          <Link to=\"/book\">\n            <Button variant=\"outline-primary\" size=\"sm\">\n              Add Book &gt;\n            </Button>\n          </Link>\n        </Col>\n      </Jumbotron>\n      <Container>\n        <Table striped bordered hover>\n          <thead variant=\"dark\">\n            <tr>\n              <th>#</th>\n              <th>Book title</th>\n              <th>Author name</th>\n              <th>Category</th>\n              <th>ISBN</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{listBooks}</tbody>\n        </Table>\n      </Container>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport BookForm from \"./components/add-a-book/BookForm\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport { BrowserRouter as Router, Switch, Route, withRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={withRouter(Dashboard)} />\n        <Route exact path=\"/book\" component={withRouter(BookForm)} />\n        <Route exact path=\"/book/:id\" component={withRouter(BookForm)} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}